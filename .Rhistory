# fig3a
fig3a
View(df_sex_ratio)
?pivot_wider
df_sex_ratio_jasp <- df_sex_ratio %>%
tidyr::pivot_wider(names_from = Site,
values_from = Proportion)
View(df_sex_ratio_jasp)
df_sex_ratio_jasp <- df_sex_ratio %>%
tidyr::pivot_wider(names_from = Site,
values_from = Proportion) %>%
write.csv("df_fig3a.csv", df_sex_ratio_jasp, row.names = F)
df_sex_ratio_jasp <- df_sex_ratio %>%
tidyr::pivot_wider(names_from = Site,
values_from = Proportion) %>%
write.csv("df_fig3a.csv", ., row.names = F)
write.csv("df_fig3a.csv", df_sex_ratio_jasp, row.names = F)
?write.csv
write.csv(df_sex_ratio_jasp, "df_fig3a.csv", row.names = F)
library(tidyverse)
library(ggridges)
library(openxlsx)
library(ggh4x)
library(stringr)
library(patchwork)
rm(list = ls())
load("df_chinese_subj_rr_stage1.RData")
# Load regions code
df_regionCode <- read.xlsx("Chin_Subj_F4(5)_region.xlsx")
save(df_census6, df_CFPS2018, df_PSA001, df_regionCode, file = "df_chinese_subj_rr_stage1.RData")
library(tidyverse)
library(ggridges)
library(openxlsx)
library(ggh4x)
library(stringr)
library(patchwork)
rm(list = ls())
load("df_chinese_subj_rr_stage1.RData")
# check data
str(df_PSA001) # have an overview of the data
str(df_CFPS2018)
str(df_census6)
str(df_regionCode)
df_PSA001_sex <- df_PSA001 %>%
dplyr::count(Sex) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2) * 100,
Site = "PSA001",
Sex = ifelse(Sex == "f", 'female', 'male' )) %>%
dplyr::select(Site, Sex, Proportion)
df_census6_sex <- df_census6 %>%
dplyr::select(c(6,7)) %>%        # select columns
dplyr::slice(c(5)) %>%
dplyr::rename(male=1,
female=2) %>%
dplyr::mutate(Site = "Census6") %>%
tidyr::pivot_longer(c(male, female),
names_to = "Sex",
values_to = "Proportion") %>%
dplyr::mutate(Proportion = round(as.numeric(Proportion), 0))
df_CFPS2018_sex <- df_CFPS2018 %>%
dplyr::rename(Sex = QA002) %>%
dplyr::count(Sex) %>%
dplyr::filter(!is.na(Sex)) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2) * 100,
Site = "CFPS2018",
Sex = ifelse(Sex == 1, "male", "female")) %>%
dplyr::select(Site, Sex, Proportion)
df_sex_ratio <- rbind(df_census6_sex, df_CFPS2018_sex, df_PSA001_sex)
### write the csv for JASP
df_sex_ratio_jasp <- df_sex_ratio %>%
tidyr::pivot_wider(names_from = Site,
values_from = Proportion)
write.csv(df_sex_ratio_jasp, "df_fig3a.csv", row.names = F)
fig3a <- ggplot(df_sex_ratio, aes(Site, Proportion,fill=Sex)) +
geom_col() +
theme_classic()+
xlab("Data sources") +
theme(legend.position = "bottom",
legend.key.size = unit(20,"pt"),
legend.box.spacing = unit(4,"pt"),
legend.title = element_blank(),
axis.title = element_text(size = 16, family = "serif"),
legend.text = element_text(size = 16, family = "serif"),
axis.text = element_text(size =16, family = "serif"))
# fig3a
fig3a
#  <- PSA_Jones_CN
df_PSA001_Age <- df_PSA001 %>%
dplyr::filter(!is.na(Age)) %>%
dplyr::mutate(ageBins_pyr = cut(Age,
breaks=c(-Inf, 5, 10, 15, 20, 25, 30, 35, 40, 45,
50, 55,60,65,70, 75,80,85,90,95, Inf),
labels=c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34", "35~39", "40~44",
"45~49","50~54","55~59","60~64","65~69","70~74", "75~79",
"80~84","85~89", "90~94",">=95"))) %>%
dplyr::count(ageBins_pyr, Sex) %>%
dplyr::mutate(Proportion = round(n / sum(n), 4) * 100,
Site = "CFPS2018",
Sex = ifelse(Sex == "f", "male_PSA", "female_PSA"))
df_census6_age94 <- df_census6 %>%
dplyr::select(c(1,6,7)) %>%        # select columns
dplyr::slice(c(6,12,18,24,30,36,42,   # select rows
48,54,60,66,72,78,84,
90,96,102,108,114)) %>%
dplyr::rename(ageBins=1,
male=2,
female=3) %>%
dplyr::mutate(ageBins = c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34", "35~39", "40~44",
"45~49","50~54","55~59","60~64","65~69","70~74", "75~79",
"80~84","85~89", "90~94"))
###Combining the data of 95 years old and above and controlling the number of the decimal places
df_census6_age95 <- data.frame(ageBins = c(">=95"),
male = round((117716 + 8852)/1332810869*100, 2),
female = round((252263 + 27082)/1332810869*100, 2))
df_census6_age <- rbind(df_census6_age94, df_census6_age95) %>%
dplyr::mutate(ageBins = factor(ageBins, levels = c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34",
"35~39", "40~44","45~49","50~54","55~59","60~64","65~69",
"70~74", "75~79", "80~84","85~89", "90~94",">=95"))) %>%
tidyr::pivot_longer(-ageBins, names_to = "Sex", values_to = "Proportion") %>%
dplyr::mutate(Proportion=as.numeric(Proportion))
###Plotting
fig3b <- ggplot(data= df_census6_age, aes(x=ageBins, y=ifelse(Sex=="male", -Proportion, Proportion), fill=Sex)) +
geom_col(alpha=0.5, width = 1) +
geom_line(data = df_PSA001_Age, aes(x=ageBins_pyr,
y = ifelse(Sex == "male_PSA", -Proportion/2.5, Proportion/2.5),
group=Sex,color="PSA001"), size=1, inherit.aes = FALSE) +
scale_y_continuous(limits = c(-15,15),sec.axis = sec_axis(~.*2.5, name = "Proportion (PSA001)")) +
coord_flip() +
labs(y="Proportion (census data)", x = "Age bins", color=NULL)+
annotate("text",label= "italic(Male)",x=19,y=-2,parse=TRUE,size=8, family = "serif") +
annotate("text",label= "italic(Female)",x=19,y=3,parse=TRUE,size=8,family = "serif") +
scale_color_manual(values = c("red","blue"))+
theme_classic()+
theme(panel.border =element_rect(fill=NA,color="black"),
legend.position ="bottom",
legend.box.spacing = unit(2,"pt"),
legend.text = element_text(size = 16, family = "serif"),
legend.title = element_blank(),
axis.title = element_text(size = 16,family = "serif"),
axis.text = element_text(size = 16,family = "serif"))
fig3 <- fig3a + fig3b +  plot_annotation(tag_levels = 'A')
ggsave("fig3.pdf", fig3, device = "pdf", width=16, height = 9)
fig3
### Get countries with n >=30
PSA001_valid_countries <-  df_PSA001 %>%
dplyr::group_by(Countries) %>%
dplyr::summarise(n = n()) %>%
dplyr::ungroup() %>%
dplyr::filter(n >=30 & !is.na(Countries)) %>%
dplyr::pull(Countries)
### remove data without sex info
df_PSA001_valid_sex <-  df_PSA001 %>%
dplyr::filter(Countries %in% PSA001_valid_countries) %>%
dplyr::mutate(Sex = ifelse(Sex == "no" | Sex == "na", NA, Sex))
df_PSA001_valid_merge <- merge(df_PSA001_valid_sex, df_regionCode, by.x = "Countries", by.y = "country_iso2")
df_PSA001_valid_merge_sex_ratio <- df_PSA001_valid_merge %>%
dplyr::filter(!is.na(Sex)) %>%
dplyr::count(weird, Countries, Sex) %>%
dplyr::group_by(weird, Countries) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2)) %>%
dplyr::arrange(Sex, Proportion) %>%
dplyr::ungroup()
countries_order_sex <- df_PSA001_valid_merge_sex_ratio %>%
dplyr::filter(Sex == "f") %>%
dplyr::pull(Countries)
df_PSA001_valid_merge_sex_ratio_sored <- df_PSA001_valid_merge_sex_ratio %>%
dplyr::mutate(Countries = factor(Countries, levels = countries_order_sex))
df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::mutate(Proportion = Proportion * 100) %>%
write.csv(., "PSA001_sex_ratio_all.csv", row.names = F)
fig4a <- ggplot(df_PSA001_valid_merge_sex_ratio_sored, aes(x=Proportion, y=Countries,fill=Sex)) +
geom_col(alpha = .75)+
labs(y="Countries") + # , fill="Sex"
scale_fill_discrete(label=c("female","male")) +
theme_classic()+
guides(y="axis_nested") +
theme(legend.position = "none",
legend.title = element_text(size = 15,family = "serif"),
axis.title= element_text(size = 15,family = "serif"),
axis.text = element_text(size = 10,family = "serif"),
strip.text = element_text(size = 15,family = "serif"),
strip.background = element_rect(fill = NA,color = NA),
panel.border = element_rect(fill = NA,color = "black")) +
scale_x_continuous(breaks = seq(0, 1, by = 0.1))+
facet_wrap(~ weird, scales = "free")
# p_PSA001_sex
p_PSA001_sex
fig4a
df_PSA001_Age_valid <- df_PSA001 %>%
dplyr::filter(!is.na(Age)) %>%   ### Removing the NA value in age
dplyr::filter(Countries %in% PSA001_valid_countries) ### filter countries with > 30 participants
# merge with country code and force the age over 60 in a narrow range for visualization
df_PSA001_Age_valid_countryCode <- merge(df_PSA001_Age_valid, df_regionCode, by.x = "Countries", by.y = "country_iso2") %>%
dplyr::mutate(Age = ifelse(Age > 60, sample(c(61, 62, 63, 64, 65), 1), Age))
PSA001_valid_countries_sorted <- df_PSA001_Age_valid_countryCode %>%
dplyr::group_by(Countries) %>%
dplyr::summarise(medianAge = median(Age)) %>%
dplyr::ungroup() %>%
dplyr::arrange(medianAge) %>%
dplyr::pull(Countries)
df_PSA001_Age_valid_countryCode_sorted <- df_PSA001_Age_valid_countryCode %>%
dplyr::mutate(Countries = factor(Countries, levels = PSA001_valid_countries_sorted)) %>%
dplyr::filter(!(Sex=="no" | Sex=="na"))
### Plotting
fig4b <- ggplot(df_PSA001_Age_valid_countryCode_sorted, aes(x=Age, y=Countries, fill=Sex)) +
geom_density_ridges(scale = 1, alpha = .75, size=0.5) +
theme_classic() +
guides(y="axis_nested") +
labs(y="Countries") +
scale_fill_discrete(label=c("female","male")) +
facet_wrap(~weird, scales = "free") +
coord_cartesian(clip = "off") +
scale_y_discrete(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
theme(legend.position = "none",
axis.title= element_text(size = 15,family = "serif"),
axis.text = element_text(size = 10,family = "serif"),
panel.border = element_rect(fill = NA,color = "black"),
strip.background = element_rect(fill = NA,color=NA),
strip.text = element_text(size = 15,family = "serif"))
# p_PSA001_Age
# save the plot
fig4 <- (fig4a + fig4b) +  plot_annotation(tag_levels = 'A')
ggsave("fig4.pdf", fig4, device = "pdf", width=16, height = 9)
fig4
PSA001_age_Jasp <- df_PSA001_Age_valid_countryCode_sorted %>%
dplyr::select(user_id, Countries, Sex, Age) %>%
dplyr::mutate(ageBins=cut(Age,
breaks=c(0, 10.5, 20.5, 30.5, 40.5, 50.5, 60.5, Inf),
labels=c("0~10","11~20","21~30", "31~40", "41~50", "51~60", ">=61"))) %>%
dplyr::count(Countries, ageBins) %>%
dplyr::group_by(Countries) %>%
dplyr::mutate(freq = (n / sum(n))*100) %>%
dplyr::ungroup() %>%
tidyr::complete(Countries, ageBins, fill = list(n = 0, freq = 0)) %>%
dplyr::mutate(percent = floor(freq),
indx = freq - percent)
## below we fill the percentage to 100%
filler_idx <- PSA001_age_Jasp %>%
dplyr::group_by(Countries) %>%
dplyr::summarise(sum = sum(percent)) %>%
dplyr::ungroup() # this is necessary, otherwise the for loop doesn't work
PSA001_age_Jasp_filled <- data.frame(matrix(ncol = ncol(PSA001_age_Jasp), nrow = 0))
colnames(PSA001_age_Jasp_filled) <- colnames(PSA001_age_Jasp)
for (ii in 1:nrow(filler_idx)){
tmp <- PSA001_age_Jasp %>%
dplyr::filter(Countries == filler_idx$Countries[ii]) %>%
dplyr::arrange(desc(indx))
if (filler_idx$sum[ii] < 100) {
for (jj in seq(100 - filler_idx$sum[ii])){
tmp$percent[jj] <- tmp$percent[jj] + 1
}
}
PSA001_age_Jasp_filled <- rbind(PSA001_age_Jasp_filled, tmp)
}
PSA001_age_Jasp_filled <- PSA001_age_Jasp_filled %>%
dplyr::arrange(Countries, ageBins) %>%
dplyr::select(-indx)
filler_idx2 <- PSA001_age_Jasp_filled %>%
dplyr::group_by(Countries) %>%
dplyr::summarise(sum = sum(percent)) %>%
dplyr::ungroup()
write.csv(PSA001_age_Jasp_filled, "fig4b_PSA001_age.csv", row.names = F)
?contingencyTableBF
library(BayesFactor)
?contingencyTableBF
fig4a
View(df_PSA001_valid_merge_sex_ratio_sored)
View(df_PSA001_valid_merge_sex_ratio)
View(df_PSA001_valid_merge)
View(df_PSA001_valid_merge_sex_ratio)
?pivot_wider
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "Proportion")
View(df_PSA001_valid_merge_sex_ratio_sored_wide)
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::select(-weird) %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "Proportion")
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::select(-c(weird,n)) %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "Proportion")
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::select(-c(weird,n)) %>%
dplyr::mutate(Proportion = Proportion * 100)
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::select(-c(weird,n)) %>%
dplyr::mutate(Proportion = Proportion * 100)  %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "Proportion")
df_PSA001_valid_merge_sex_ratio_sored_wide %>%
write.csv(., "Fig4a_sex_jasp.csv", row.names = F)
View(PSA001_age_Jasp_filled)
PSA001_age_Jasp_filled_wide <- PSA001_age_Jasp_filled %>%
dplyr::select(-c(n, freq)) %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "percent")
View(PSA001_age_Jasp_filled_wide)
PSA001_age_Jasp_filled_wide <- PSA001_age_Jasp_filled %>%
dplyr::select(-c(n, freq)) %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "percent")
PSA001_age_Jasp_filled_wide %>%
write.csv(., "Fig4b_ageBin_wide.csv", row.names = F)
df_PSA001_valid_merge_sex_ratio_sored_wide %>%
write.csv(., "Fig4a_sex_wide.csv", row.names = F)
library(tidyverse)
library(ggridges)
library(openxlsx)
library(ggh4x)
library(stringr)
library(patchwork)
rm(list = ls())
load("df_chinese_subj_rr_stage1.RData")
# check data
str(df_PSA001) # have an overview of the data
str(df_CFPS2018)
str(df_census6)
str(df_regionCode)
df_PSA001_sex <- df_PSA001 %>%
dplyr::count(Sex) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2) * 100,
Site = "PSA001",
Sex = ifelse(Sex == "f", 'female', 'male' )) %>%
dplyr::select(Site, Sex, Proportion)
df_census6_sex <- df_census6 %>%
dplyr::select(c(6,7)) %>%        # select columns
dplyr::slice(c(5)) %>%
dplyr::rename(male=1,
female=2) %>%
dplyr::mutate(Site = "Census6") %>%
tidyr::pivot_longer(c(male, female),
names_to = "Sex",
values_to = "Proportion") %>%
dplyr::mutate(Proportion = round(as.numeric(Proportion), 0))
df_CFPS2018_sex <- df_CFPS2018 %>%
dplyr::rename(Sex = QA002) %>%
dplyr::count(Sex) %>%
dplyr::filter(!is.na(Sex)) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2) * 100,
Site = "CFPS2018",
Sex = ifelse(Sex == 1, "male", "female")) %>%
dplyr::select(Site, Sex, Proportion)
df_sex_ratio <- rbind(df_census6_sex, df_CFPS2018_sex, df_PSA001_sex)
### write the csv for JASP
df_sex_ratio_jasp <- df_sex_ratio %>%
tidyr::pivot_wider(names_from = Site,
values_from = Proportion)
write.csv(df_sex_ratio_jasp, "df_fig3a.csv", row.names = F)
fig3a <- ggplot(df_sex_ratio, aes(Site, Proportion,fill=Sex)) +
geom_col() +
theme_classic()+
xlab("Data sources") +
theme(legend.position = "bottom",
legend.key.size = unit(20,"pt"),
legend.box.spacing = unit(4,"pt"),
legend.title = element_blank(),
axis.title = element_text(size = 16, family = "serif"),
legend.text = element_text(size = 16, family = "serif"),
axis.text = element_text(size =16, family = "serif"))
# fig3a
#  <- PSA_Jones_CN
df_PSA001_Age <- df_PSA001 %>%
dplyr::filter(!is.na(Age)) %>%
dplyr::mutate(ageBins_pyr = cut(Age,
breaks=c(-Inf, 5, 10, 15, 20, 25, 30, 35, 40, 45,
50, 55,60,65,70, 75,80,85,90,95, Inf),
labels=c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34", "35~39", "40~44",
"45~49","50~54","55~59","60~64","65~69","70~74", "75~79",
"80~84","85~89", "90~94",">=95"))) %>%
dplyr::count(ageBins_pyr, Sex) %>%
dplyr::mutate(Proportion = round(n / sum(n), 4) * 100,
Site = "CFPS2018",
Sex = ifelse(Sex == "f", "male_PSA", "female_PSA"))
df_census6_age94 <- df_census6 %>%
dplyr::select(c(1,6,7)) %>%        # select columns
dplyr::slice(c(6,12,18,24,30,36,42,   # select rows
48,54,60,66,72,78,84,
90,96,102,108,114)) %>%
dplyr::rename(ageBins=1,
male=2,
female=3) %>%
dplyr::mutate(ageBins = c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34", "35~39", "40~44",
"45~49","50~54","55~59","60~64","65~69","70~74", "75~79",
"80~84","85~89", "90~94"))
###Combining the data of 95 years old and above and controlling the number of the decimal places
df_census6_age95 <- data.frame(ageBins = c(">=95"),
male = round((117716 + 8852)/1332810869*100, 2),
female = round((252263 + 27082)/1332810869*100, 2))
df_census6_age <- rbind(df_census6_age94, df_census6_age95) %>%
dplyr::mutate(ageBins = factor(ageBins, levels = c("0~4","5~9","10~14", "15~19", "20~24", "25~29", "30~34",
"35~39", "40~44","45~49","50~54","55~59","60~64","65~69",
"70~74", "75~79", "80~84","85~89", "90~94",">=95"))) %>%
tidyr::pivot_longer(-ageBins, names_to = "Sex", values_to = "Proportion") %>%
dplyr::mutate(Proportion=as.numeric(Proportion))
###Plotting
fig3b <- ggplot(data= df_census6_age, aes(x=ageBins, y=ifelse(Sex=="male", -Proportion, Proportion), fill=Sex)) +
geom_col(alpha=0.5, width = 1) +
geom_line(data = df_PSA001_Age, aes(x=ageBins_pyr,
y = ifelse(Sex == "male_PSA", -Proportion/2.5, Proportion/2.5),
group=Sex,color="PSA001"), size=1, inherit.aes = FALSE) +
scale_y_continuous(limits = c(-15,15),sec.axis = sec_axis(~.*2.5, name = "Proportion (PSA001)")) +
coord_flip() +
labs(y="Proportion (census data)", x = "Age bins", color=NULL)+
annotate("text",label= "italic(Male)",x=19,y=-2,parse=TRUE,size=8, family = "serif") +
annotate("text",label= "italic(Female)",x=19,y=3,parse=TRUE,size=8,family = "serif") +
scale_color_manual(values = c("red","blue"))+
theme_classic()+
theme(panel.border =element_rect(fill=NA,color="black"),
legend.position ="bottom",
legend.box.spacing = unit(2,"pt"),
legend.text = element_text(size = 16, family = "serif"),
legend.title = element_blank(),
axis.title = element_text(size = 16,family = "serif"),
axis.text = element_text(size = 16,family = "serif"))
fig3 <- fig3a + fig3b +  plot_annotation(tag_levels = 'A')
ggsave("fig3.pdf", fig3, device = "pdf", width=16, height = 9)
fig3
### Get countries with n >=30
PSA001_valid_countries <-  df_PSA001 %>%
dplyr::group_by(Countries) %>%
dplyr::summarise(n = n()) %>%
dplyr::ungroup() %>%
dplyr::filter(n >=30 & !is.na(Countries)) %>%
dplyr::pull(Countries)
### remove data without sex info
df_PSA001_valid_sex <-  df_PSA001 %>%
dplyr::filter(Countries %in% PSA001_valid_countries) %>%
dplyr::mutate(Sex = ifelse(Sex == "no" | Sex == "na", NA, Sex))
df_PSA001_valid_merge <- merge(df_PSA001_valid_sex, df_regionCode, by.x = "Countries", by.y = "country_iso2")
df_PSA001_valid_merge_sex_ratio <- df_PSA001_valid_merge %>%
dplyr::filter(!is.na(Sex)) %>%
dplyr::count(weird, Countries, Sex) %>%
dplyr::group_by(weird, Countries) %>%
dplyr::mutate(Proportion = round(n / sum(n), 2)) %>%
dplyr::arrange(Sex, Proportion) %>%
dplyr::ungroup()
countries_order_sex <- df_PSA001_valid_merge_sex_ratio %>%
dplyr::filter(Sex == "f") %>%
dplyr::pull(Countries)
df_PSA001_valid_merge_sex_ratio_sored <- df_PSA001_valid_merge_sex_ratio %>%
dplyr::mutate(Countries = factor(Countries, levels = countries_order_sex))
df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::mutate(Proportion = Proportion * 100) %>%
write.csv(., "PSA001_sex_ratio_all.csv", row.names = F)
df_PSA001_valid_merge_sex_ratio_sored_wide <- df_PSA001_valid_merge_sex_ratio_sored %>%
dplyr::select(-c(weird,n)) %>%
dplyr::mutate(Proportion = Proportion * 100)  %>%
tidyr::pivot_wider(names_from = "Countries", values_from = "Proportion")
df_PSA001_valid_merge_sex_ratio_sored_wide %>%
write.csv(., "Fig4a_sex_wide.csv", row.names = F)
View(df_sex_ratio_jasp)
library(tidyverse)
?lgamma
alphas <- data.frame(levels = c("f", "m"),count=c(1,1))
alphas
counts <- df_sex_ratio_jasp %>% dplyr::select(CFPS2018)
counts
counts <- df_sex_ratio_jasp %>% dplyr::select(PSA001)
counts
thetas <- df_sex_ratio_jasp$Census6[1]/sum(df_sex_ratio_jasp$Census6)
thetas
# compute Bayes factor
lbeta.xa <- sum(lgamma(alphas + counts)) - lgamma(sum(alphas + counts))
alphas <- data.frame(count=factor(c(1,1), levels=c("f", "m")))
alphas
alphas <- data.frame(count=c(1,1), rownames=c("f", "m"))
alphas
alphas <- data.frame(count=c(1,1))
alphas
# compute Bayes factor
lbeta.xa <- sum(lgamma(alphas + counts)) - lgamma(sum(alphas + counts))
lbeta.xa
lbeta.a  <- sum(lgamma(alphas)) - lgamma(sum(alphas))
lbeta.a
any(rowSums(cbind(thetas, counts)) == 0)
LogBF10 <- (lbeta.xa-lbeta.a) + (0 - sum(counts * log(thetas)))
LogBF10
exp(LogBF10
)
counts
expected
expected <- setNames(sum(counts)*thetas, names(counts))
expected
alphas
counts
thetas
LogBF10
BF10    = .clean(exp(LogBF10))
exp(LogBF10)
thetas <- df_sex_ratio_jasp$Census6[2]/sum(df_sex_ratio_jasp$Census6)
thetas
counts <- df_sex_ratio_jasp %>% dplyr::arrange(Sex)
View(counts)
counts <- df_sex_ratio_jasp %>% dplyr::arrange(Sex) %>% dplyr::select(PSA001)
counts
# compute Bayes factor
lbeta.xa <- sum(lgamma(alphas + counts)) - lgamma(sum(alphas + counts))
lbeta.a  <- sum(lgamma(alphas)) - lgamma(sum(alphas))
LogBF10 <- (lbeta.xa-lbeta.a) + (0 - sum(counts * log(thetas)))
LogBF10
(lbeta.xa-lbeta.a)
sum(counts * log(thetas))
lbeta.a
alphas
lgamma(alphas)
lgamma(sum(alphas))
sum(alphas)
lgamma(2)
lgamma(1)
lgamma(3)
lgamma(4)
lgamma(5)
gamma(5)
log(24)
?gamma
